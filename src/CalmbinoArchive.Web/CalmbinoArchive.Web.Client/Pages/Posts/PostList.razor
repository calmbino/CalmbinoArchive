@page "/posts"
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

<div class="calmbino-post-list-container">
    <div Class="calmbino-post-list-func" Style="width: 100%; padding-inline: 1rem">
        <MudButton Class="" Href="/posts/create" Variant="Variant.Outlined" Color="Color.Primary" StartIcon="@Icons.Material.Filled.ModeEdit">Write</MudButton>
    </div>
    <MudDivider Style="margin: 0.8rem;"/>

    <div class="calmbino-post-card-grid">
        @foreach (var post in Posts)
        {

        <MudCard Class="calmbino-post-card"
                 Outlined="true"
                 Elevation="10">
            <a class="calmbino-post-card-link"
                href="@($"/posts/{post.Id}")">
            <MudCardHeader>
                <MudText Class="calmbino-post-card-title" Typo="Typo.h6">@post.Title</MudText>
            </MudCardHeader>
            <MudDivider DividerType="DividerType.Middle"/>
            <MudCardContent Style="height: 100%">
                <MudText Class="calmbino-post-card-description" Typo="Typo.body1">@post.Content</MudText>
            </MudCardContent>
            <MudDivider DividerType="DividerType.Middle"/>
            <MudCardContent Class="d-flex flex-row-reverse">
                <MudText Typo="Typo.body2" Style="font-style: italic;">작성일: @post.CreatedAt</MudText>
            </MudCardContent>
            </a>
            
        </MudCard>

            
        }
    </div>
    <MudContainer Class="d-flex flex-column align-center">
        <MudPagination
            Rectangular="true"
            Variant="Variant.Outlined"
            ShowFirstButton="true"
            ShowLastButton="true"
            BoundaryCount="2"
            MiddleCount="3"
            Count="2"
            SelectedChanged="SelectPage"/>
    </MudContainer>
</div>



@code{
    private int _selected = 1;

    private int _postId = 0;
    private int _totalCnt = 0;
    public int Id { get; set; }

    public record Post(Guid Id, string Title, string Content, DateTime CreatedAt);

    public List<Post> Posts;

    protected override void OnInitialized()
    {
        Posts = GetPosts(6);
        base.OnInitialized();

    }

    private List<Post> GetPosts(int cnt)
    {
        // await Task.Delay(1000);

        List<Post> newPosts = [];

        for (int i = 0; i < cnt; i++)
        {
            _totalCnt += 1;
            newPosts.Add(new Post(
                Guid.NewGuid(), 
                $"제목입니다({_totalCnt})", 
                "간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.간단한 설명 및 요약입니다.", 
                DateTime.Now));
        }

        Console.WriteLine("데이터 5건 조회 완료");

        return newPosts;
    }

    private void SelectPage(int page)
    {
        _selected = page;

        int cnt = page == 1 ? 6 : 5;
        Posts = GetPosts(cnt);
        
        
        Console.WriteLine($"Page 선택 >> {_selected}");
    }

}