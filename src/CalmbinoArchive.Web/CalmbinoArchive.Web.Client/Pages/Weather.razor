@using CalmbinoArchive.Domain.Entities
@using CalmbinoArchive.Web.Shared.Services

@page "/weather"

@rendermode @(new InteractiveWebAssemblyRenderMode(false))
@inject WeatherClientService WeatherClientService

<MudPopoverProvider/>

<PageTitle>Weather</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">@RendererInfo.Name</MudText>

@if (_forecasts == null)
{
    <MudProgressLinear Color="Color.Secondary" Indeterminate="true" Class="my-7"/>
}
else
{
    <MudTable Items="_forecasts" Hover="true" SortLabel="Sort By" Elevation="0" AllowUnsorted="false">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel InitialDirection="SortDirection.Ascending"
                                   SortBy="new Func<WeatherForecast, object>(x => x.Date)">Date
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.TemperatureC)">Temp. (C)
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.TemperatureF)">Temp. (F)
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.Summary!)">Summary
                </MudTableSortLabel>
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Date</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
            <MudTd DataLabel="Summary">@context.Summary</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new[] { 50, 100 }"/>
        </PagerContent>
    </MudTable>
}

@code {
    private WeatherForecast[]? _forecasts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _forecasts = await WeatherClientService.GetDatasAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

}